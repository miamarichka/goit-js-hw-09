{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAhCMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcd,MAAMe,OACzCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAE/C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDpB,EAAcoB,EAAUN,GACRO,MAAR,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,UAE/DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QAAQ,sBAAoBzB,QAAiBC,UAEjEY,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onBtnSubmit);\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);//make string to number and get values of inputs//\n  let step = Number(event.currentTarget.step.value);\n  let amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {//лічильник скільки разів потрібно буде викликати функцію//\n    createPromise(position, delay)//виклик промісу//\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;//збільшуємо затримку на крок після кожного виклику//\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {//створення промісу//\n    setTimeout(() => {//відкладений виклик//\n      const shouldResolve = Math.random() > 0.3;//умова//\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);//мс затримки//\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.bb9c5892.js.map"}